openapi: 3.0.0

info:
  title: Proxy
  version: v1

servers:
  - url: http://localhost:8080

tags:
  - name: proxy
    description: Proxy

paths:
  /apis/core/1/{path}:
    get:
      summary: Proxy GET request
      tags:
        - proxy
      parameters:
        - in: path
          name: path
          schema:
            type: string
          required: true
          description: Path to proxy
      responses:
        200:
          description: Successful response
        500:
          description: Internal server error
        504:
          description: Gateway timeout
    post:
      summary: Proxy POST request
      tags:
        - proxy
      parameters:
        - in: path
          name: path
          schema:
            type: string
          required: true
          description: Path to proxy
      responses:
        200:
          description: Successful response from API Core
        500:
          description: Internal server error
        504:
          description: Gateway timeout
    put:
      summary: Proxy PUT request
      tags:
        - proxy
      parameters:
        - in: path
          name: path
          schema:
            type: string
          required: true
          description: Path to proxy
      responses:
        200:
          description: Successful response
        500:
          description: Internal server error
        504:
          description: Gateway timeout
    delete:
      summary: Proxy DELETE request
      tags:
        - proxy
      parameters:
        - in: path
          name: path
          schema:
            type: string
          required: true
          description: Path to proxy
      responses:
        200:
          description: Successful response from API Core
        500:
          description: Internal server error
        504:
          description: Gateway timeout
  /apis/core/1/api/author/find:
    get:
      summary: Retrieves all authors.
      parameters:
        - in: query
          name: term
          schema:
            type: string
          description: Term to search for in author names
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  authors:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuthorEntity'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /apis/core/1/api/author/new:
    post:
      summary: Creates a new author.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorEntity'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  author:
                    $ref: '#/components/schemas/AuthorEntity'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /apis/core/1/api/author/{id}:
    get:
      summary: Retrieves a single author by ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Author ID
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  author:
                    $ref: '#/components/schemas/AuthorEntity'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Updates an existing author.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Author ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorEntity'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  author:
                    $ref: '#/components/schemas/AuthorEntity'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      summary: Deletes an author by ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Author ID
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /apis/core/1/api/branch/:
    get:
      tags:
        - branch
      summary: List all branches
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
        '404':
          description: No branches found
  /apis/core/1/api/branch/{id}:
    get:
      tags:
        - branch
      summary: Show a branch by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Branch ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
        '400':
          description: Invalid ID
        '404':
          description: Branch not found
    put:
      tags:
        - branch
      summary: Update a branch
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Branch ID
      requestBody:
        description: Branch data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Branch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Branch'
        '400':
          description: Invalid ID or Bad request or Branch not valid
        '500':
          description: Branch not updated

components:
  schemas:
    AuthorEntity:
      type: object
      properties:
        firstname:
          type: string
        surname:
          type: string
    Branch:
      type: object
      properties:
        name:
          type: string
        steps:
          type: number
          format: float
        currency:
          type: string
        ordering:
          type: string
        public:
          type: boolean
        pricelist:
          type: string
        cart:
          type: boolean
        content:
          type: string
      required:
        - name
        - currency
